package e_OOP;

public class FactorialTest {
	public static void main(String[] args) {
		FactorialTest ft = new FactorialTest();
		long result = ft.factorial(4);
		System.out.println(result);
		

		
	}
	
	
	long factorial(int number){   // 펙토리얼 구하는 메서드
		long result = 1;
		if(number == 1){
			result = 1;
		} else {
			result = number*factorial(number-1);
		}
		return result;
	}
	
	
	
}


/*

메서드에어리어에 펙토리얼 테스트 클래스 올라가고 
클래스친구 클래스 변수와 클래스 메소드가 같이온다 
클래스메서드는 메인메서드만 입력한다 

팩토리얼이라는 메서드를 호출하기위해 인스턴스맴버이기때문에 인스턴스화를 해줘야하기때문에 인스턴스문장이있는것이다.

팩토리얼 클래스를사용하기위해 만들었다

대입연산자의 왼쪽부터 해줘야한다

클래스가먼저호출되었으니 메서드에어리어에 있으니 넘어가고 
에프티라는 메인메서드안에서 지역변수인 ft가 로드된다 

인스턴스가 생성이된다 heap 메모리에 생성이된다. 인스턴스화가 되면 인스턴스맴버들이 같이올라간다
인스턴스 변수는없고 인스턴스메서드가있다

펙토리얼이라는 메서드가있는데 인트타입을 한개 원하는 메서드 입니다. 
인스턴스 맴버들도 다 올라갔고

ft에 대입을 시켜준다.!!!

에프티가 들고 있는것은 ft의 주소이다. 펙토리얼메서드를 갖고있는것이 아니라 주소를들고있는것이다.!!

result 라는 변수는 선언된다 메인메서드라는. 에프티에있는 펙토리얼메서드를 호출한다 result의 오른쪽에있는 공간이

fac 인자값으로 3을갖는다 . 

매개변수가 number 가있고 이 매개변수는 인자값 3으로 들어간다 
result 를 선언한다 펙토리얼이라는 메서드 안에서 선언된다. 처음에 1입니다. 
넘버가 1이냐 아니다 엘스문장으로 넘어가면 
result에 넘버 곱하기 메서드를 호출하라고 한다 . 호출할때 넘버-1의 인자값을 가지고 호출을 하게된다. 

메서드  매기변수 리절트 1 넘버가 1이냐 아니다 넘버 곱하기 펙토리얼 메서드호출 
 ........
 
 넘버 1 리절트 1 넘버가 1이냐 1이다 리절트 1이고 리턴 리절트 리절트를 만나주고 퇴근 
 다음것도 리절트가 완성이된다 리턴 리절트 만나서 돌려주고 퇴근
 다음것도 리전트가 완성이되고 리턴 리절트 만나서 돌려주고 퇴근 
 ....
 
 출력







*/

// 콜스텍의 한계가 있기 때문에 너무많아지면 할일이 많아 지기때문에 파업중
// 너무 많아지면 
// stackOverflowError 가 일어난다.








